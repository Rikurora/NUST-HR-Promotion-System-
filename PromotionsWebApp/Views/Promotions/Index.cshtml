@using PromotionsWebApp.Domain.Entities
@using PromotionsWebApp.Models
@using PromotionsWebApp.Utilities
@using PromotionsWebApp.ViewComponents
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@model PaginatedList<Promotion>;
@{
    ViewData["Title"] = "Promotions List";
    string Search = "";
    if (ViewData["CurrentFilter"] != null)
        Search = ViewData["CurrentFilter"].ToString();
    string LinkUrl = "Index";
    string LinkArea = "Promotion";
    var prevDisabled = "True";
    var nextDisabled = "True";
    var prevPageNr = 1;
    var nextPageNr = 1;
    if (Model.Count > 0)
    {
        prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        nextDisabled = !Model.HasNextPage ? "disabled" : "";
        prevPageNr = Model.PageIndex - 1;
        nextPageNr = Model.PageIndex + 1;
    }
}
<div class="row">
    <h4 class="center-align">Promotions</h4>
    <div class="divider"></div>
    @if (Model.Any())
    {
        <div class="col s12">
            @await Component.InvokeAsync("Search", new { model = new SearchViewComponent.SearchViewModel(Search, LinkUrl, LinkArea) })
            <ul class="collection">
                @foreach (Promotion item in Model)
                {
                    <li class="collection-item avatar">
                        <img src="data:image;base64,@System.Convert.ToBase64String(item.Staff.User.ProfileImage)" width="80" height="80" class="circle">
                        <span class="Title">
                            @item.Staff.User.ToString()
                        </span>
                        <p>
                            Date Applied: @item.AddedDate.ToShortDateString()<br />
                            Current Rank: @item.Staff.Jobs.Where(x=>x.IsCurrent).Single().Rank.Name <br />
                            Promote To: @item.Rank.Name<br />
                            Promotion Stage: @item.Status.ToString()
                        </p>
                        <span class="secondary-content">
                            <a asp-action="Detail" asp-controller="Promotions" asp-route-promotionId="@item.Id" class="tooltipped" data-position="top" data-tooltip="View Application"><i class="material-icons">visibility</i></a>
                            @if (User.IsInRole("Admin"))
                            {
                                <a asp-action="Delete" asp-controller="Promotions" asp-route-promotionId="@item.Id" class="tooltipped" data-position="top" data-tooltip="Delete Application"><i class="material-icons  red-text">delete</i></a>

                            }
                        </span>
                    </li>
                }
            </ul>
        </div>
        <div class="center-align">
            @await Component.InvokeAsync("Pager", new
        {
        model = new PagerViewComponent.PagerViewModel
        (prevPageNr, nextPageNr, Search, LinkUrl, LinkArea, nextDisabled, prevDisabled)
        })
        </div>
    }
    else
    {
        <div class="col s12 m12 l12">
            <div class="card-panel nustColor center-align">
                <span class="white-text">
                    No Promotions are currently existing in the system.
                </span>
            </div>
        </div>
    }


    <br />
    <br />

    <div class="row">
        <div class="input-field col s12 center-align ">
            <a asp-action="Index" asp-controller="Home" class="btn waves-effect waves-light btn-large nustColor">
                <span class="material-icons white-text md-24 matIcon">
                    keyboard_return
                </span>
                <span class="white-text">Back</span>
            </a>
        </div>
    </div>

</div>
